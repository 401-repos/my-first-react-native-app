{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\code-fellows\\\\401\\\\my\\\\screens\\\\AddNew.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from 'axios';\n\nfunction AddNew() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      definition = _useState2[0],\n      setDefinition = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      term = _useState4[0],\n      setTerm = _useState4[1];\n\n  var addHandler = function addHandler() {\n    var baseURL, url, data;\n    return _regeneratorRuntime.async(function addHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            baseURL = \"https://api-server-0.herokuapp.com\";\n            url = \"/term\";\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios({\n              method: 'post',\n              baseURL: baseURL,\n              url: url,\n              headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-origin': baseURL\n              },\n              data: JSON.stringify({\n                term: term,\n                definition: definition\n              })\n            }));\n\n          case 4:\n            data = _context.sent;\n            console.log(data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: style.view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    onChange: function onChange(value) {\n      setTerm(value);\n    },\n    style: style.text,\n    placeholder: \"e.g. SQL , JavaScript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    onChange: function onChange(value) {\n      setDefinition(value);\n    },\n    style: style.definition,\n    multiline: true,\n    placeholder: \"New Definition Goes here ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: addHandler,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar style = StyleSheet.create({\n  view: {\n    alignItems: 'center',\n    marginTop: 30\n  },\n  text: {\n    width: '80%',\n    height: 100,\n    borderRadius: 40,\n    borderWidth: 3,\n    borderColor: '#999',\n    textAlign: 'center',\n    fontSize: 20\n  },\n  definition: {\n    width: '80%',\n    marginTop: 20,\n    height: 400,\n    borderRadius: 40,\n    borderWidth: 3,\n    borderColor: '#999',\n    textAlign: 'left',\n    padding: 10,\n    fontSize: 20\n  }\n});\nexport default AddNew;","map":{"version":3,"sources":["D:/code-fellows/401/my/screens/AddNew.jsx"],"names":["React","useState","axios","AddNew","definition","setDefinition","term","setTerm","addHandler","baseURL","url","method","headers","data","JSON","stringify","console","log","style","view","value","text","StyleSheet","create","alignItems","marginTop","width","height","borderRadius","borderWidth","borderColor","textAlign","fontSize","padding"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {View,TextInput, StyleSheet , Button,} from 'react-native'\r\nimport axios from 'axios'\r\nfunction AddNew() {\r\n    const [definition , setDefinition] = useState('');\r\n    const [term , setTerm] = useState('');\r\n    const addHandler = async ()=>{\r\n        const baseURL = \"https://api-server-0.herokuapp.com\";\r\n    const url = \"/term\"\r\n        const data = await axios({\r\n            method: 'post',\r\n            baseURL: baseURL,\r\n            url: url,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-origin': baseURL\r\n            },\r\n            data: JSON.stringify({term,definition})\r\n        });\r\n        console.log(data)\r\n    }\r\n    return (\r\n        <View style={style.view}>\r\n            <TextInput onChange={(value)=>{\r\n                setTerm(value)\r\n            }} style={style.text} placeholder=\"e.g. SQL , JavaScript\" />\r\n            <TextInput onChange={(value)=>{\r\n                setDefinition(value)\r\n            }} style={style.definition} multiline placeholder=\"New Definition Goes here ...\"/>\r\n            <Button onPress={addHandler} title=\"Add\" />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    view:{\r\n\r\n        alignItems: 'center',\r\n        marginTop:30\r\n    }\r\n    ,\r\n    text: {\r\n        width:'80%',\r\n        height:100,\r\n        borderRadius:40,\r\n        borderWidth:3,\r\n        borderColor:'#999',\r\n        textAlign: 'center',\r\n        fontSize:20\r\n    },\r\n    definition:{\r\n        width:'80%',\r\n        marginTop:20,\r\n        height:400,\r\n        borderRadius:40,\r\n        borderWidth:3,\r\n        borderColor:'#999',\r\n        textAlign:'left',\r\n        padding:10,\r\n        fontSize:20\r\n    }\r\n})\r\n\r\nexport default AddNew;\r\n"]},"metadata":{},"sourceType":"module"}