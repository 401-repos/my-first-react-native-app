{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\code-fellows\\\\401\\\\my\\\\screens\\\\AddNew.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from 'axios';\n\nfunction AddNew() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      definition = _useState2[0],\n      setDefinition = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      term = _useState4[0],\n      setTerm = _useState4[1];\n\n  var baseURL = \"https://api-server-0.herokuapp.com\";\n  var url = \"/term\";\n\n  var addHandler = function addHandler() {\n    var data;\n    return _regeneratorRuntime.async(function addHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(term, definition);\n\n            if (!(term.length > 2 && definition.length > 10)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios({\n              method: 'post',\n              baseURL: baseURL,\n              url: url,\n              headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-origin': baseURL\n              },\n              data: JSON.stringify({\n                term: term,\n                definition: definition\n              })\n            }));\n\n          case 4:\n            data = _context.sent;\n            _context.next = 8;\n            break;\n\n          case 7:\n            Alert.alert('OOPS!!', \"Term must be a valid term, amd the definition must be a GOOD ONE!!\", [{\n              text: \"Understood\"\n            }]);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: style.view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    onChange: function onChange(value) {\n      setTerm(value);\n    },\n    style: style.text,\n    placeholder: \"e.g. SQL , JavaScript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    onChange: function onChange(value) {\n      setDefinition(value);\n    },\n    style: style.definition,\n    multiline: true,\n    placeholder: \"New Definition Goes here ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: addHandler,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar style = StyleSheet.create({\n  view: {\n    alignItems: 'center',\n    marginTop: 30\n  },\n  text: {\n    width: '80%',\n    height: 100,\n    borderRadius: 40,\n    borderWidth: 3,\n    borderColor: '#999',\n    textAlign: 'center',\n    fontSize: 20\n  },\n  definition: {\n    width: '80%',\n    marginTop: 20,\n    height: 400,\n    borderRadius: 40,\n    borderWidth: 3,\n    borderColor: '#999',\n    textAlign: 'left',\n    padding: 10,\n    fontSize: 20\n  }\n});\nexport default AddNew;","map":{"version":3,"sources":["D:/code-fellows/401/my/screens/AddNew.jsx"],"names":["React","useState","axios","AddNew","definition","setDefinition","term","setTerm","baseURL","url","addHandler","console","log","length","method","headers","data","JSON","stringify","Alert","alert","text","style","view","value","StyleSheet","create","alignItems","marginTop","width","height","borderRadius","borderWidth","borderColor","textAlign","fontSize","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, TextInput, StyleSheet, Button, Alert} from 'react-native'\r\nimport axios from 'axios'\r\nfunction AddNew() {\r\n    const [definition, setDefinition] = useState('');\r\n    const [term, setTerm] = useState('');\r\n    const baseURL = \"https://api-server-0.herokuapp.com\";\r\n    const url = \"/term\"\r\n    const addHandler = async () => {\r\n        console.log(term, definition)\r\n        if(term.length > 2 && definition.length >10){\r\n            const data = await axios({\r\n                method: 'post',\r\n                baseURL: baseURL,\r\n                url: url,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-origin': baseURL\r\n                },\r\n                data: JSON.stringify({ term, definition })\r\n            });\r\n            // console.log(data.data)\r\n        }else{\r\n            Alert.alert('OOPS!!' , \"Term must be a valid term, amd the definition must be a GOOD ONE!!\",[{text:\"Understood\"}])\r\n        }\r\n    }\r\n    return (\r\n        <View style={style.view}>\r\n            <TextInput onChange={(value) => {\r\n                setTerm(value)\r\n            }} style={style.text} placeholder=\"e.g. SQL , JavaScript\" />\r\n            <TextInput onChange={(value) => {\r\n                setDefinition(value)\r\n            }} style={style.definition} multiline placeholder=\"New Definition Goes here ...\" />\r\n            <Button onPress={addHandler} title=\"Add\" />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    view: {\r\n\r\n        alignItems: 'center',\r\n        marginTop: 30\r\n    }\r\n    ,\r\n    text: {\r\n        width: '80%',\r\n        height: 100,\r\n        borderRadius: 40,\r\n        borderWidth: 3,\r\n        borderColor: '#999',\r\n        textAlign: 'center',\r\n        fontSize: 20\r\n    },\r\n    definition: {\r\n        width: '80%',\r\n        marginTop: 20,\r\n        height: 400,\r\n        borderRadius: 40,\r\n        borderWidth: 3,\r\n        borderColor: '#999',\r\n        textAlign: 'left',\r\n        padding: 10,\r\n        fontSize: 20\r\n    }\r\n})\r\n\r\nexport default AddNew;\r\n"]},"metadata":{},"sourceType":"module"}